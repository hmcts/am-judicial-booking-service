#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('52 01 * * *')])
])

@Library("Infrastructure")

def type = "java"
def product = "am"
def component = "judicial-booking-service"

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

withNightlyPipeline(type, product, component) {

// Vars needed for functional and smoke tests to run against AKS
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.IDAM_API_URL_BASE = "https://idam-api.aat.platform.hmcts.net"
  env.IDAM_S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.DEFINITION_STORE_HOST = "http://ccd-definition-store-api-aat.service.core-compute-aat.internal"
  env.DEFINITION_STORE_URL_BASE = "http://ccd-definition-store-api-aat.service.core-compute-aat.internal"
  env.BEFTA_S2S_CLIENT_ID = "am_role_assignment_service"
  env.OAUTH2_CLIENT_ID = "am_role_assignment"
  env.OAUTH2_REDIRECT_URI = "http://am-role-assignment-service-aat.service.core-compute-aat.internal/oauth2redirect"
  env.OAUTH2_ACCESS_TOKEN_TYPE = "OIDC"
  env.BEFTA_RESPONSE_HEADER_CHECK_POLICY = "JUST_WARN"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.S2S_URL_BASE = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.OAUTH2_SCOPE_VARIABLES = "openid%20profile%20roles%20authorities"
  env.IDAM_CLIENT_ID="am_role_assignment"
  env.OPENID_SCOPE_VARIABLES = "openid+profile+roles+authorities"
  env.MICROSERVICE_NAME = "am_judicial_booking_service"

// Vars for Kubernetes PACT
  env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'
  env.PACT_BROKER_URL = "pact-broker.platform.hmcts.net"
  env.PACT_BROKER_PORT = "443"
  env.PACT_BROKER_SCHEME = "https"
  
  overrideVaultEnvironments(vaultOverrides)

  enableFortifyScan()

  after('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }

  //enableMutationTest()
}
