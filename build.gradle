buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.24")
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.11'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'info.solidsoft.pitest' version '1.6.0'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'org.sonarqube' version '3.2.0'
    id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.23'
    id 'au.com.dius.pact' version '4.1.7' //don't upgrade or downgrade this or serenity reports will fail to generate
}

apply plugin: "info.solidsoft.pitest"
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

def versions = [
        junit              : '5.5.0',
        lombok             : '1.18.12',
        gradlePitest       : '1.3.0',
        pitest             : '1.4.2',
        reformLogging      : '5.1.1',
        reformS2sClient    : '3.1.2',
        serenity           : '2.2.12',
        sonarPitest        : '0.5',
        springBoot         : '2.3.9.RELEASE',
        springHystrix      : '2.1.1.RELEASE',
        swagger2Version    : '2.10.5',
        pact_version       : '4.1.7',
        rest_assured       : '3.3.0',
        cucumber           : '5.7.0',
        feign_jackson      : '9.7.0',
        launchDarklySdk    : '5.2.2'
]

mainClassName = 'uk.gov.hmcts.reform.judicialbooking.JudicialBookingApplication'
def jarName = 'am-judicial-booking-service.jar'

pmd {
    toolVersion = '6.21.0'
    sourceSets = []
}

group = 'uk.gov.hmcts.reform.judicialbooking'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

configurations {
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
    cucumberRuntime.extendsFrom(functionalRuntime)
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    doFirst {
        generateCucumberReports.enabled = true
        javaexec {
            main = "uk.gov.hmcts.reform.judicialbooking.befta.JudicialBookingAmBeftaMain"
            classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', "json:${projectDir}/target/cucumber.json", '--tags', 'not @Ignore', '--glue',
                    'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features/']
        }
    }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    serenity.outputDirectory = file("${projectDir}/integrationTest/site/reports")
    finalizedBy aggregate
}
check.dependsOn integration

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
    finalizedBy aggregate
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

jacoco {
    toolVersion = "0.8.5"
}

pitest {
    pitestVersion = "1.5.2"
    testPlugin = "junit5"
    targetClasses = ['uk.gov.hmcts.reform.*']
    excludedClasses = ['uk.gov.hmcts.reform.judicialbooking.JudicialBookingApplication', 'uk.gov.hmcts.reform.judicialbooking.util.Swagger2SpringBoot', 'uk.gov.hmcts.reform.judicialbooking.controller.advice.ErrorConstants', 'uk.gov.hmcts.reform.judicialbooking.configuration.*', 'uk.gov.hmcts.reform.judicialbooking.apihelper.*', 'uk.gov.hmcts.reform.judicialbooking.model.*', 'uk.gov.hmcts.reform.judicialbooking.controller.endpoints.S2SAuthentication']
    threads = 15
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 40
}


sonarqube {
    properties {
        property "sonar.projectName", "tempered:am-judicial-booking-service"
        property "sonar.projectKey", "tempered:am-judicial-booking-service"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions", "src/main/java/**"
        //property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/judicialbooking/*Application.java," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/util/*Swagger2SpringBoot.java," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/controller/advice/*ErrorConstants.java," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/controller/advice/exception/**," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/configuration/**," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/model/enums/**," + "src/main/java/uk/gov/hmcts/reform/judicialbooking/apihelper/**"
        //property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
    }
}

/*project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"*/

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}


//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}


dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot)

    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'

    //Added for Spring Security Implementation
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot)

    //Added for S2S and User Authentication
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.reformS2sClient
    compile group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.swagger2Version
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.swagger2Version
    compile group: 'io.springfox', name: 'springfox-spring-webmvc', version: versions.swagger2Version

    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.5.RELEASE'
    compile group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk

    compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1'
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.5'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.4.5'
    compile(group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0')

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.20'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation 'uk.gov.hmcts.reform:idam-client:1.5.5'
    implementation 'commons-io:commons-io:2.8.0'

    testCompile('com.opentable.components:otj-pg-embedded:0.13.3')
    testCompile('com.github.tomakehurst:wiremock-jre8:2.25.1')
    testCompile('org.springframework.cloud:spring-cloud-contract-wiremock:3.0.2')

    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    pitest 'org.pitest:pitest-junit5-plugin:0.14'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

    testCompile group: 'org.pitest', name: 'pitest', version: versions.pitest
    testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
    testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot)
    testCompile group: 'uk.gov.hmcts', name: 'befta-fw', version: '20.2.0.rdm.8934.1'
    //compile fileTree(dir: 'lib', include: 'befta-fw-5.11.0.jar')

    testCompile(group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber)
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber
    testCompile group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson

    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    smokeTestCompile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    // AM-467-Serenity report for Integration test
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    integrationTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured

    integrationTestCompile sourceSets.main.runtimeClasspath
    integrationTestCompile sourceSets.test.runtimeClasspath

    functionalTestCompile sourceSets.main.runtimeClasspath
    functionalTestCompile sourceSets.test.runtimeClasspath

    smokeTestCompile sourceSets.main.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

}


test {
    generateCucumberReports.enabled = false
    useJUnitPlatform()
    failFast = true
}

bootJar {
    archiveName = jarName

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

configurations {
    runtime.exclude group: "com.thoughtworks.xstream", module: "xstream"
}

cucumberReports {
    outputDir = file("${projectDir}/target/cucumber")
    reports = files("${projectDir}/target/cucumber.json")
}