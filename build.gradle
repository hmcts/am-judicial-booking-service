buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.serenity-bdd:serenity-gradle-plugin:2.4.34'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.56'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.springframework.boot' version '2.7.18'
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'com.github.ben-manes.versions' version '0.50.0'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.25'
    id 'au.com.dius.pact' version '4.3.12' //don't upgrade or downgrade this or serenity reports will fail to generate
    id 'org.owasp.dependencycheck' version '9.0.9'
}

apply plugin: 'info.solidsoft.pitest'
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

ext['snakeyaml.version'] = '2.0'

def versions = [
        junit              : '5.9.3',
        lombok             : '1.18.30',
        gradlePitest       : '1.3.0',
        pitest             : '1.15.6',
        reformLogging      : '6.1.4',
        reformS2sClient    : '4.0.2',
        serenity           : '2.2.12',
        sonarPitest        : '0.5',
        springBoot         : '2.7.18',
        spring             : '5.3.31',
        springSecurity     : '5.8.9',
        springHystrix      : '2.1.1.RELEASE',
        swagger2Version    : '3.0.0',
        tomcat             : '9.0.85',
        pact_version       : '4.1.7',
        rest_assured       : '3.3.0',
        cucumber           : '5.7.0',
        feign_jackson      : '12.5',
        jacksondata        : '2.16.1',
        launchDarklySdk    : '5.10.9',
        log4JVersion       : '2.22.1',
        logbackVersion     : '1.2.13'
]

mainClassName = 'uk.gov.hmcts.reform.judicialbooking.JudicialBookingApplication'
def jarName = 'am-judicial-booking-service.jar'

pmd {
    toolVersion = '6.55.0'
    sourceSets = []
}

group = 'uk.gov.hmcts.reform.judicialbooking'
version = '0.0.1'

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

configurations {
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
    cucumberRuntime.extendsFrom(functionalRuntime)
    contractTestCompile.extendsFrom testCompile
    contractTestRuntime.extendsFrom testRuntime
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
}

idea {
    module {
        // config to allow Intelij to mark test source and resource files correctly to help linting tools
        testSources.from(java.sourceSets.functionalTest.java.srcDirs)
        testSources.from(java.sourceSets.integrationTest.java.srcDirs)
        testSources.from(java.sourceSets.smokeTest.java.srcDirs)
        testSources.from(java.sourceSets.contractTest.java.srcDirs)
        testResources.from(java.sourceSets.functionalTest.resources.srcDirs)
        testResources.from(java.sourceSets.integrationTest.resources.srcDirs)
        testResources.from(java.sourceSets.smokeTest.resources.srcDirs)
        testResources.from(java.sourceSets.contractTest.resources.srcDirs)
    }
}

project.ext {
    pacticipant = 'accessMgmt_judicialBooking'
    pacticipantVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: JavaExec) {
    description = "Runs the functional tests"
    group = "Verification"

    generateCucumberReports.enabled = false
    main("uk.gov.hmcts.reform.judicialbooking.befta.JudicialBookingAmBeftaMain")
    classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
    args = ['--strict',  '--tags', 'not @Ignore',
            '--plugin', "json:${rootDir}/target/cucumber.json", '--plugin', "junit:${buildDir}/test-results/functional/cucumber.xml",
            '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features'
    ]
    // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
    jvmArgs '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED'

    // Configure array order in FTAs
    environment "DEFAULT_COLLECTION_ASSERTION_MODE", "UNORDERED"

    finalizedBy {
        generateCucumberReports.enabled = true
        generateCucumberReports {
            doLast{
                def functionalReportsFolder = "${rootDir}/target/cucumber/functional-html-reports/"
                delete functionalReportsFolder
                new File(functionalReportsFolder).mkdirs()
                file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file(functionalReportsFolder))
                logger.quiet("Functional test report moved to ---> file://$functionalReportsFolder/overview-features.html")
            }
        }
    }

    outputs.upToDateWhen { false }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    serenity.outputDirectory = file("${projectDir}/integrationTest/site/reports")
    finalizedBy aggregate
}
check.dependsOn integration

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
    finalizedBy aggregate
}

task fortifyScan(type: JavaExec)  {
    main("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
    // The line below prevents the build from failing if the Fortify scan detects issues
    ignoreExitValue(true)
}

task contract(type: Test) {
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/orgrolemapping/**"
    systemProperty 'pact.rootDir', "pacts"
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/judicialbooking/**"
    include "uk/gov/hmcts/reform/orgrolemapping/**"
    systemProperty 'pact.rootDir', "pacts"
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

task runProviderPactVerification(type: Test) {
    useJUnitPlatform()
    logger.lifecycle("Runs provider pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    if (project.hasProperty('pact.verifier.publishResults')) {
        systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
    }
    systemProperty 'pact.provider.version', project.pacticipantVersion
    include "uk/gov/hmcts/reform/judicialbooking/**"
}

runProviderPactVerification.dependsOn contract
runProviderPactVerification.finalizedBy pactVerify

pact {
    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:9292'
    }
    publish {
        pactDirectory = 'pacts'
        version = project.pacticipantVersion
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
    }
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

jacoco {
    toolVersion = "0.8.8"
}

pitest {
    testPlugin = "junit5"
    targetClasses = ['uk.gov.hmcts.reform.*']
    excludedClasses = ['uk.gov.hmcts.reform.judicialbooking.JudicialBookingApplication',
                       'uk.gov.hmcts.reform.judicialbooking.util.Swagger2SpringBoot',
                       'uk.gov.hmcts.reform.judicialbooking.config.*',
                       'uk.gov.hmcts.reform.judicialbooking.controller.advice.ErrorConstants',
                       'uk.gov.hmcts.reform.judicialbooking.configuration.*',
                       'uk.gov.hmcts.reform.judicialbooking.apihelper.*',
                       'uk.gov.hmcts.reform.judicialbooking.model.*',
                       'uk.gov.hmcts.reform.judicialbooking.util.Swagger2SpringBoot$ExitException']
    threads = 15
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 40
}


sonarqube {
    properties {
        property "sonar.projectName", "tempered:am-judicial-booking-service"
        property "sonar.projectKey", "tempered:am-judicial-booking-service"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions",
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/*Application.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/util/*Swagger2SpringBoot.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/controller/advice/*ErrorConstants.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/controller/advice/exception/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/config/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/model/enums/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialbooking/apihelper/**"
        property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}


//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

tasks.named('integration') {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}


dependencies {
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot) {
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot)
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.8'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.10.RELEASE'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.5'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework', name: 'spring-core', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-beans', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-aop', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-aspects', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-context', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-context-support', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-expression', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-jcl', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-jdbc', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-orm', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-tx', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-web', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-webmvc', version: versions.spring

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.8'

    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation 'commons-io:commons-io:20030203.000550'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.5.13'
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: versions.tomcat
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: versions.tomcat
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksondata
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.jacksondata, ext: 'pom'
    implementation group: 'com.nimbusds', name: 'lang-tag', version: '1.7'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.37.3'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'

    //Added for S2S and User Authentication
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.reformS2sClient
    implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.1'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.0.1'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging

    implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.4'
    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.6.2'

    testImplementation('org.springframework.cloud:spring-cloud-contract-wiremock:3.1.10')
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    testImplementation('com.opentable.components:otj-pg-embedded:1.0.2')
    testImplementation('com.github.tomakehurst:wiremock-jre8:2.35.1')
    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.11'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.9.3'
    testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    testImplementation group: 'info.solidsoft.gradle.pitest', name:'gradle-pitest-plugin', version: '1.15.0'
    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    testImplementation group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    testImplementation 'com.github.hmcts:befta-fw:8.7.11'
    testImplementation 'com.github.hmcts:fortify-client:1.4.0:all'

    smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    smokeTestImplementation group: 'commons-io', name: 'commons-io', version: '20030203.000550'
    // AM-467-Serenity report for Integration test
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    integrationTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured

    implementation group: 'org.pitest', name: 'pitest-junit5-plugin', version: '1.2.1'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

}

test {
    generateCucumberReports.enabled = false
    useJUnitPlatform()
    failFast = true
}

bootJar {
    archiveFileName = jarName

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}


dependencyManagement {
    dependencies {
        dependencySet(group: 'org.apache.logging.log4j', version: versions.log4JVersion) {
            entry 'log4j-api'
            entry 'log4j-to-slf4j'
        }
        dependencySet(group: 'ch.qos.logback', version: versions.logbackVersion) {
            entry 'logback-classic'
            entry 'logback-core'
        }
        dependencySet(group: 'com.fasterxml.jackson.core', version: versions.jacksondata) {
            entry 'jackson-databind'
            entry 'jackson-core'
            entry 'jackson-annotations'
        }
    }
}

configurations.all {
    exclude group: "org.glassfish", module: "jakarta.el"
    exclude group: 'io.github.x-stream', module: 'mxparser'
    exclude group: 'io.netty', module: 'netty-tcnative-classes'
}

cucumberReports {
    outputDir = file("${projectDir}/target/cucumber")
    reports = files("${projectDir}/target/cucumber.json")
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processContractTestResources") {
    duplicatesStrategy = 'include'
}
